From db841ed5ba62eca838b4d4e5230747d7bf0c72af Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Piotr=20Kr=C3=B3l?= <piotr.krol@3mdeb.com>
Date: Mon, 6 May 2024 01:27:38 +0200
Subject: [PATCH 03/80] payloads: add support for sortbootorder
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Piotr Kr√≥l <piotr.krol@3mdeb.com>
---
 .gitignore                                    | 45 +++++++++++++++-
 payloads/Kconfig                              |  8 +++
 payloads/Makefile.inc                         |  1 +
 payloads/external/Makefile.inc                | 16 ++++++
 .../external/sortbootorder/Kconfig.secondary  | 36 +++++++++++++
 payloads/external/sortbootorder/Makefile      | 53 +++++++++++++++++++
 6 files changed, 157 insertions(+), 2 deletions(-)
 create mode 100644 payloads/external/sortbootorder/Kconfig.secondary
 create mode 100644 payloads/external/sortbootorder/Makefile

diff --git a/.gitignore b/.gitignore
index 126cae665d8d..5ae8b30cb027 100644
--- a/.gitignore
+++ b/.gitignore
@@ -8,8 +8,47 @@ defconfig
 .ccwrap
 build/
 coreboot-builds/
-coreboot-builds*/
-
+payloads/coreinfo/lpbuild/
+payloads/coreinfo/lp.config*
+payloads/external/depthcharge/depthcharge/
+payloads/external/FILO/filo/
+payloads/external/GRUB2/grub2/
+payloads/external/LinuxBoot/linuxboot/
+payloads/external/SeaBIOS/seabios/
+payloads/external/tianocore/tianocore/
+payloads/external/tint/tint/
+payloads/external/U-Boot/u-boot/
+payloads/external/Memtest86Plus/memtest86plus/
+payloads/external/iPXE/ipxe/
+payloads/external/sortbootorder/sortbootorder
+util/crossgcc/acpica-unix-*/
+util/crossgcc/binutils-*/
+util/crossgcc/build-*BINUTILS/
+util/crossgcc/build-*EXPAT/
+util/crossgcc/build-*GCC/
+util/crossgcc/build-*GDB/
+util/crossgcc/build-*GMP/
+util/crossgcc/build-*LIBELF/
+util/crossgcc/build-*MPC/
+util/crossgcc/build-*MPFR/
+util/crossgcc/build-*PYTHON/
+util/crossgcc/build-*LVM/
+util/crossgcc/build-*IASL/
+util/crossgcc/expat-*/
+util/crossgcc/gcc-*/
+util/crossgcc/gdb-*/
+util/crossgcc/gmp-*/
+util/crossgcc/libelf-*/
+util/crossgcc/mingwrt-*/
+util/crossgcc/mpc-*/
+util/crossgcc/mpfr-*/
+util/crossgcc/Python-*/
+util/crossgcc/*.src/
+util/crossgcc/tarballs/
+util/crossgcc/w32api-*/
+util/crossgcc/xgcc/
+util/crossgcc/xgcc-*/
+util/crossgcc/xgcc
 site-local
 
 *.\#
@@ -31,6 +70,8 @@ site-local
 # Development friendly files
 tags
 .clang_complete
+.tags
+.tags_sorted_by_file
 .cache
 compile_commands.json
 .vscode/
diff --git a/payloads/Kconfig b/payloads/Kconfig
index 2a2773a2188f..82776c03a43d 100644
--- a/payloads/Kconfig
+++ b/payloads/Kconfig
@@ -163,6 +163,14 @@ config TINT_SECONDARY_PAYLOAD
 	  tint can be loaded as a secondary payload under SeaBIOS, GRUB,
 	  or any other payload that can load additional payloads.
 
+config SORTBOOTORDER_SECONDARY_PAYLOAD
+	bool "Load sortbootorder as a secondary payload"
+	default n
+	depends on ARCH_X86
+	help
+	  sortbootorder can be loaded as a secondary payload under SeaBIOS
+	  or any other payload that can load additional payloads.
+
 config COREDOOM_SECONDARY_PAYLOAD
 	bool "Load coreDOOM as a secondary payload"
 	default n
diff --git a/payloads/Makefile.inc b/payloads/Makefile.inc
index 41e3f9fca3df..47eb3856c306 100644
--- a/payloads/Makefile.inc
+++ b/payloads/Makefile.inc
@@ -24,6 +24,7 @@ payloads/external/U-Boot \
 payloads/external/Memtest86Plus \
 payloads/external/iPXE \
 payloads/external/tint \
+payloads/external/sortbootorder \
 payloads/external/edk2 \
 payloads/external/GRUB2 \
 payloads/external/LinuxBoot \
diff --git a/payloads/external/Makefile.inc b/payloads/external/Makefile.inc
index a2d2f505e238..890a7ab476ae 100644
--- a/payloads/external/Makefile.inc
+++ b/payloads/external/Makefile.inc
@@ -320,6 +320,22 @@ payloads/external/Memtest86Plus/memtest86plus/memtest: $(DOTCONFIG)
 		$(MEMTEST_SERIAL_OPTIONS) \
 		MFLAGS= MAKEFLAGS=
 
+# sortbootorder
+
+payloads/external/sortbootorder/sortbootorder/sortbootorder.elf sortbootorder:
+	$(MAKE) -C payloads/external/sortbootorder all \
+		TARGET_APU1=$(CONFIG_BOARD_PCENGINES_APU1) \
+		SORTBOOTORDER_REVISION=$(CONFIG_SORTBOOTORDER_REVISION) \
+		SORTBOOTORDER_REVISION_ID=$(CONFIG_SORTBOOTORDER_REVISION_ID) \
+		SORTBOOTORDER_MASTER=$(CONFIG_SORTBOOTORDER_MASTER) \
+		SORTBOOTORDER_STABLE=$(CONFIG_SORTBOOTORDER_STABLE) \
+
+
+cbfs-files-$(CONFIG_SORTBOOTORDER_SECONDARY_PAYLOAD) += img/setup
+img/setup-file := payloads/external/sortbootorder/sortbootorder/sortbootorder.elf
+img/setup-type := payload
+img/setup-compression := $(CBFS_PAYLOAD_COMPRESS_FLAG)
+
 # iPXE
 
 PXE_ROM_PCI_ID:=$(subst $(comma),,$(CONFIG_PXE_ROM_ID))
diff --git a/payloads/external/sortbootorder/Kconfig.secondary b/payloads/external/sortbootorder/Kconfig.secondary
new file mode 100644
index 000000000000..5d70dbb1c086
--- /dev/null
+++ b/payloads/external/sortbootorder/Kconfig.secondary
@@ -0,0 +1,36 @@
+if SORTBOOTORDER_SECONDARY_PAYLOAD
+
+choice
+	prompt "sortbootorder version"
+	default SORTBOOTORDER_STABLE
+
+config SORTBOOTORDER_STABLE
+	bool "v4.6.17"
+	help
+	  Stable sortbootorder version
+
+config SORTBOOTORDER_MASTER
+	bool "master"
+	help
+	  Newest sortbootorder version
+
+config SORTBOOTORDER_REVISION
+	bool "git revision"
+	help
+	  Select this option if you have a specific commit or branch
+	  that you want to use as the revision from which to
+	  build sortbootorder.
+
+	  You will be able to specify the name of a branch or a commit id
+	  later.
+
+endchoice
+
+config SORTBOOTORDER_REVISION_ID
+	string "Insert sortbootorder commit's SHA-1 or a branch name"
+	depends on SORTBOOTORDER_REVISION
+	default "origin/master"
+	help
+	   The commit's SHA-1 or branch name of the revision to use.
+
+endif
diff --git a/payloads/external/sortbootorder/Makefile b/payloads/external/sortbootorder/Makefile
new file mode 100644
index 000000000000..dd922d7020e6
--- /dev/null
+++ b/payloads/external/sortbootorder/Makefile
@@ -0,0 +1,53 @@
+TAG-$(SORTBOOTORDER_MASTER)=origin/master
+TAG-$(SORTBOOTORDER_STABLE)=v4.6.17
+TAG-$(SORTBOOTORDER_REVISION)=$(SORTBOOTORDER_REVISION_ID)
+
+project_git_repo=https://github.com/pcengines/sortbootorder.git
+project_name=sortbootorder
+project_dir=$(CURDIR)/sortbootorder
+
+unexport KCONFIG_AUTOHEADER
+unexport KCONFIG_AUTOCONFIG
+unexport KCONFIG_DEPENDENCIES
+unexport KCONFIG_SPLITCONFIG
+unexport KCONFIG_TRISTATE
+unexport KCONFIG_NEGATIVES
+
+all: build
+
+$(project_dir):
+	echo "    Cloning sortbootorder from Git"
+	git clone $(project_git_repo) $(project_dir)
+
+fetch: $(project_dir)
+ifeq ($(TAG-y),)
+	echo "Error: The specified tag is invalid"
+ifeq ($(SORTBOOTORDER_REVISION),y)
+	echo "Error: There is no revision specified for sortbootorder"
+	false
+endif
+	false
+endif
+	cd sortbootorder; git show $(TAG-y) >/dev/null 2>&1 ; \
+		if [ $$? -ne 0 ] || [ "$(TAG-y)" = "origin/master" ]; then \
+		echo "    Fetching new commits from the sortbootorder repo"; \
+		git fetch; fi
+
+checkout: fetch
+	echo "    Checking out sortbootorder revision $(TAG-y)"
+	cd sortbootorder; git checkout master; git branch -D coreboot 2>/dev/null; git checkout -b coreboot $(TAG-y)
+
+build: checkout
+	echo "    MAKE       sortbootorder"
+	$(MAKE) -C sortbootorder VERSION=$(TAG-y) APU1=$(TARGET_APU1)
+
+clean:
+	test -d sortbootorder && $(MAKE) -C sortbootorder clean || exit 0
+
+distclean:
+	rm -rf sortbootorder
+
+print-repo-info:
+	echo "$(project_git_repo) $(project_dir)"
+
+.PHONY: checkout build clean distclean fetch sortbootorder print-repo-info
-- 
2.39.2

