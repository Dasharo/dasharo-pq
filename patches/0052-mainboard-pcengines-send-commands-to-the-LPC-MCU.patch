From 6fffbcc6069587429dee5240a7095ee97a77e48c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Piotr=20Kr=C3=B3l?= <piotr.krol@3mdeb.com>
Date: Fri, 3 May 2024 13:10:32 +0200
Subject: [PATCH 52/80] mainboard/pcengines: send commands to the LPC MCU
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Michał Żygowski <michal.zygowski@3mdeb.com>
---
 src/mainboard/pcengines/apu2/bootblock.c | 14 +++--
 src/mainboard/pcengines/apu2/romstage.c  | 70 +++++++++++++++++++++++-
 2 files changed, 75 insertions(+), 9 deletions(-)

diff --git a/src/mainboard/pcengines/apu2/bootblock.c b/src/mainboard/pcengines/apu2/bootblock.c
index 3fa35af0ad88..464b3c6035a4 100644
--- a/src/mainboard/pcengines/apu2/bootblock.c
+++ b/src/mainboard/pcengines/apu2/bootblock.c
@@ -6,6 +6,8 @@
 #include <superio/nuvoton/common/nuvoton.h>
 #include <superio/nuvoton/nct5104d/nct5104d.h>
 
+#include "bios_knobs.h"
+
 #define SIO_PORT 0x2e
 #define SERIAL1_DEV PNP_DEV(SIO_PORT, NCT5104D_SP1)
 #define SERIAL2_DEV PNP_DEV(SIO_PORT, NCT5104D_SP2)
@@ -15,10 +17,10 @@ void bootblock_mainboard_early_init(void)
 	hudson_lpc_port80();
 	hudson_clk_output_48Mhz();
 
-	/* COM2 on apu5 is reserved so only COM1 should be supported */
-	if ((CONFIG_UART_FOR_CONSOLE == 1) &&
-		!CONFIG(BOARD_PCENGINES_APU5))
-		nuvoton_enable_serial(SERIAL2_DEV, CONFIG_TTYS0_BASE);
-	else if (CONFIG_UART_FOR_CONSOLE == 0)
-		nuvoton_enable_serial(SERIAL1_DEV, CONFIG_TTYS0_BASE);
+	/* Enable UARTB for LPC MCU */
+	if (CONFIG(BOARD_PCENGINES_APU5))
+		nuvoton_enable_serial(SERIAL2_DEV, 0x2f8);
+
+	if ((check_com2() || (CONFIG_UART_FOR_CONSOLE == 1)))
+		nuvoton_enable_serial(SERIAL2_DEV, 0x2f8);
 }
diff --git a/src/mainboard/pcengines/apu2/romstage.c b/src/mainboard/pcengines/apu2/romstage.c
index e075983798da..5b9f9f7aa6c3 100644
--- a/src/mainboard/pcengines/apu2/romstage.c
+++ b/src/mainboard/pcengines/apu2/romstage.c
@@ -2,11 +2,13 @@
 
 #include <stdint.h>
 #include <string.h>
+#include <delay.h>
 #include <amdblocks/acpimmio.h>
 #include <amdblocks/gpio.h>
 #include <amdblocks/gpio_defs.h>
 #include <device/pci_def.h>
 #include <device/pci_ops.h>
+#include <console/uart.h>
 #include <gpio.h>
 #include <northbridge/amd/agesa/state_machine.h>
 #include <Fch/Fch.h>
@@ -17,6 +19,7 @@
 
 static void early_lpc_init(void);
 static void print_sign_of_life(void);
+static void lpc_mcu_msg(void);
 extern char coreboot_dmi_date[];
 extern char coreboot_version[];
 
@@ -122,9 +125,12 @@ void board_BeforeInitReset(struct sysinfo *cb, AMD_RESET_PARAMS *Reset)
 		}
 
 		// do not print SOL if reset will take place in FchInit
-		if (check_console() &&
-		    !(pm_read32(0xc0) & FCH_PMIOxC0_S5ResetStatus_All_Status))
-			print_sign_of_life();
+		if (!(pm_read32(0xc0) & FCH_PMIOxC0_S5ResetStatus_All_Status)) {
+			if (check_console())
+				print_sign_of_life();
+			
+			lpc_mcu_msg();
+		}
 
 		if ((check_mpcie2_clk() || CONFIG(FORCE_MPCIE2_CLK)) &&
 		     CONFIG(BOARD_PCENGINES_APU2)) {
@@ -139,3 +145,61 @@ void board_BeforeInitReset(struct sysinfo *cb, AMD_RESET_PARAMS *Reset)
 	}
 }
 
+static void lpc_mcu_msg(void)
+{
+	unsigned int i, timeout;
+	const char *post_msg = "BIOSBOOT";
+	unsigned char sync_byte = 0;
+
+	if (!CONFIG(BOARD_PCENGINES_APU5))
+		return;
+
+	uart_init(1);
+
+	for (i = 0; i < 4; i++) {
+		uart_tx_byte(1, 0xe1);
+		uart_tx_flush(1);
+		timeout = 10;
+		while (sync_byte != 0xe1) {
+			sync_byte = uart_rx_byte(1);
+			if (timeout == 0) {
+				uart_init(CONFIG_UART_FOR_CONSOLE);
+				udelay(10000);
+				printk(BIOS_ERR, "Failed to sync with LPC"
+				       " MCU, number of retries %d\n", 3 - i);
+				udelay(10000);
+				uart_init(1);
+				udelay(10000);
+				break;
+			}
+			udelay(100);
+			timeout--;
+		}
+		if (sync_byte == 0xe1)
+			break;
+	}
+
+	if (sync_byte != 0xe1)
+		return;
+
+	uart_init(1);
+	timeout = 10;
+
+	for (i = 0; i < strlen(post_msg); i++)
+		uart_tx_byte(1, *(post_msg + i));
+
+	uart_tx_byte(1, 0xe1);
+	uart_tx_flush(1);
+
+	while (uart_rx_byte(1) != 0xe1) {
+		if (timeout == 0) {
+			uart_init(CONFIG_UART_FOR_CONSOLE);
+			printk(BIOS_ERR, "Did not receive response to BIOSBOOT\n");
+			return;
+		}
+		udelay(100);
+		timeout--;
+	}
+
+	uart_init(CONFIG_UART_FOR_CONSOLE);
+}
-- 
2.39.2

