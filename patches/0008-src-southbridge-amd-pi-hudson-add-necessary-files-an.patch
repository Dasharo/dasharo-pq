From 84566ee7eac21b1d37250145c883ce15d9d8fef3 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Micha=C5=82=20=C5=BBygowski?= <michal.zygowski@3mdeb.com>
Date: Tue, 25 May 2021 12:05:11 +0200
Subject: [PATCH 08/80] src/southbridge/amd/pi/hudson: add necessary files and
 functions to use AMD SPI block
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Michał Żygowski <michal.zygowski@3mdeb.com>
---
 src/southbridge/amd/pi/hudson/early_setup.c  |  6 ++++++
 src/southbridge/amd/pi/hudson/lpc.c          | 13 ++++++++++++
 src/southbridge/amd/pi/hudson/soc/iomap.h    |  6 ++++++
 src/southbridge/amd/pi/hudson/soc/lpc.h      | 13 ++++++++++++
 src/southbridge/amd/pi/hudson/soc/pci_devs.h | 21 ++++++++++++++++++++
 5 files changed, 59 insertions(+)
 create mode 100644 src/southbridge/amd/pi/hudson/soc/iomap.h
 create mode 100644 src/southbridge/amd/pi/hudson/soc/lpc.h
 create mode 100644 src/southbridge/amd/pi/hudson/soc/pci_devs.h

diff --git a/src/southbridge/amd/pi/hudson/early_setup.c b/src/southbridge/amd/pi/hudson/early_setup.c
index 1e1a2f44aec6..7df11f7f0a01 100644
--- a/src/southbridge/amd/pi/hudson/early_setup.c
+++ b/src/southbridge/amd/pi/hudson/early_setup.c
@@ -6,6 +6,7 @@
 #include <assert.h>
 #include <stdint.h>
 #include <amdblocks/acpimmio.h>
+#include <amdblocks/lpc.h>
 #include <device/mmio.h>
 #include <device/pci_ops.h>
 
@@ -207,6 +208,11 @@ static uintptr_t hudson_spibase(void)
 	return (uintptr_t)base;
 }
 
+uintptr_t lpc_get_spibase(void)
+{
+	return hudson_spibase();
+}
+
 void hudson_set_spi100(u16 norm, u16 fast, u16 alt, u16 tpm)
 {
 	uintptr_t base = hudson_spibase();
diff --git a/src/southbridge/amd/pi/hudson/lpc.c b/src/southbridge/amd/pi/hudson/lpc.c
index ccca1138e7f7..aa6971a19dec 100644
--- a/src/southbridge/amd/pi/hudson/lpc.c
+++ b/src/southbridge/amd/pi/hudson/lpc.c
@@ -1,6 +1,7 @@
 /* SPDX-License-Identifier: GPL-2.0-only */
 
 #include <amdblocks/acpimmio.h>
+#include <amdblocks/lpc.h>
 #include <console/console.h>
 #include <device/device.h>
 #include <device/pci.h>
@@ -318,6 +319,18 @@ static void hudson_lpc_enable_resources(struct device *dev)
 	hudson_lpc_enable_childrens_resources(dev);
 }
 
+uintptr_t lpc_get_spibase(void)
+{
+	struct device *dev = pcidev_on_root(0x14, 3);
+
+	u32 base = pci_read_config32(dev, SPIROM_BASE_ADDRESS_REGISTER)	& 0xffffffc0;
+	if (!base){
+		base = SPI_BASE_ADDRESS;
+		pci_write_config32(dev, SPIROM_BASE_ADDRESS_REGISTER, base | SPI_ROM_ENABLE);
+	}
+	return (uintptr_t)base;
+}
+
 static const char *lpc_acpi_name(const struct device *dev)
 {
 	if (dev->path.type != DEVICE_PATH_PCI)
diff --git a/src/southbridge/amd/pi/hudson/soc/iomap.h b/src/southbridge/amd/pi/hudson/soc/iomap.h
new file mode 100644
index 000000000000..df40f0fe7148
--- /dev/null
+++ b/src/southbridge/amd/pi/hudson/soc/iomap.h
@@ -0,0 +1,6 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
+
+#ifndef SOC_IOMAP_H
+#define SOC_IOMAP_H
+
+#endif /* SOC_IOMAP_H */
diff --git a/src/southbridge/amd/pi/hudson/soc/lpc.h b/src/southbridge/amd/pi/hudson/soc/lpc.h
new file mode 100644
index 000000000000..0c966e938382
--- /dev/null
+++ b/src/southbridge/amd/pi/hudson/soc/lpc.h
@@ -0,0 +1,13 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
+
+#ifndef SOC_LPC_H
+#define SOC_LPC_H
+
+#define SPIROM_BASE_ADDRESS_REGISTER	0xa0
+#define   SPI_BASE_ALIGNMENT		BIT(6)
+#define   SPI_BASE_RESERVED		(BIT(0) | BIT(2)  | BIT(4) | BIT(5))
+#define   ROUTE_TPM_2_SPI		BIT(3)
+#define   SPI_ROM_ENABLE		BIT(1)
+#define   SPI_PRESERVE_BITS		(BIT(1) | BIT(3))
+
+#endif /* SOC_LPC_H */
diff --git a/src/southbridge/amd/pi/hudson/soc/pci_devs.h b/src/southbridge/amd/pi/hudson/soc/pci_devs.h
new file mode 100644
index 000000000000..747ccfc0884b
--- /dev/null
+++ b/src/southbridge/amd/pi/hudson/soc/pci_devs.h
@@ -0,0 +1,21 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
+
+#ifndef SOC_PCI_DEVS_H
+#define SOC_PCI_DEVS_H
+
+#include <device/pci_def.h>
+
+#if !defined(__SIMPLE_DEVICE__)
+#include <device/device.h>
+#define _SOC_DEV(slot, func)	pcidev_on_root(slot, func)
+#else
+#define _SOC_DEV(slot, func)	PCI_DEV(0, slot, func)
+#endif
+
+/* LPC BUS */
+#define PCU_DEV			0x14
+#define LPC_FUNC		3
+#define LPC_DEVFN		PCI_DEVFN(PCU_DEV, LPC_FUNC)
+#define SOC_LPC_DEV		_SOC_DEV(PCU_DEV, LPC_FUNC)
+
+#endif /* SOC_PCI_DEVS_H */
-- 
2.39.2

