From 2be4672add7851c728ed70397a2ede59df9fbda2 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Piotr=20Kr=C3=B3l?= <piotr.krol@3mdeb.com>
Date: Wed, 30 Nov 2016 17:55:46 +0100
Subject: [PATCH 12/80] mainboard/pcengines: add memory configuration and
 status logging
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This commit improves the mainboard_enable function in the apu2 mainboard
code. It includes a check for console availability and logs the total
available memory. It also reads memory configuration from GPIO 49 and
50, and reads the SPD data. If ECC is enabled, it logs that information
as well. This additional logging will assist in debugging and system
analysis, and ensure that the boot process is compatible with legacy
systems and meets customer expectations.

Signed-off-by: Piotr Kr√≥l <piotr.krol@3mdeb.com>
diff --git a/src/lib/Makefile.mk b/src/lib/Makefile.mk
index e22fd087238f..bb466820beb5 100644
--- a/src/lib/Makefile.mk
+++ b/src/lib/Makefile.mk
@@ -360,6 +360,7 @@ $(foreach stage,$(libhwbase-stages), \
 endif # CONFIG_ROMSTAGE_LIBHWBASE || CONFIG_RAMSTAGE_LIBHWBASE
 
 romstage-y += spd_bin.c
+ramstage-y += spd_bin.c
 
 ifeq ($(CONFIG_HAVE_SPD_IN_CBFS),y)
 LIB_SPD_BIN = $(obj)/spd.bin
diff --git a/src/mainboard/pcengines/apu2/mainboard.c b/src/mainboard/pcengines/apu2/mainboard.c
index e3b968b5fcb2..f143d7e025b8 100644
--- a/src/mainboard/pcengines/apu2/mainboard.c
+++ b/src/mainboard/pcengines/apu2/mainboard.c
@@ -21,6 +21,8 @@
 #include <superio/nuvoton/nct5104d/nct5104d.h>
 #include <smbios.h>
 #include <string.h>
+#include <cpu/amd/mtrr.h>
+#include <spd_bin.h>
 #include <spi_flash.h>
 #include "gpio_ftns.h"
 #include "bios_knobs.h"
@@ -236,10 +238,34 @@ static int mainboard_smbios_data(struct device *dev, int *handle,
 static void mainboard_enable(struct device *dev)
 {
 	/* Maintain this text unchanged for manufacture process. */
-	printk(BIOS_INFO, "Mainboard %s Enable.\n", mainboard_part_number);
+	printk(BIOS_INFO, "Mainboard " CONFIG_MAINBOARD_PART_NUMBER " Enable.\n");
+	bool scon = check_console();
 
 	config_gpio_mux();
 
+	u32 total_mem = get_top_of_mem_below_4gb() / (1024 * 1024);
+	if (get_top_of_mem_above_4gb() > 0)
+		total_mem += (get_top_of_mem_above_4gb() / (1024 * 1024)) - 4 * 1024;
+
+	if(scon) {
+		printk(BIOS_ALERT, "%d MB", total_mem);
+	}
+	//
+	// Read memory configuration from GPIO 49 and 50
+	//
+	u8 spd_index = get_spd_offset();
+	u8 spd_buffer[CONFIG_DIMM_SPD_SIZE];
+
+	if (read_ddr3_spd_from_cbfs(spd_buffer, spd_index) < 0)
+		die("No SPD data\n");
+
+	if (scon) {
+		if (spd_buffer[3] == 8)
+			printk(BIOS_ALERT, " ECC");
+
+		printk(BIOS_ALERT, " DRAM\n\n");
+	}
+
 	//
 	// Enable the RTC output
 	//
@@ -250,6 +276,10 @@ static void mainboard_enable(struct device *dev)
 	//
 	pm_write16(PM_S_STATE_CONTROL, pm_read16(PM_S_STATE_CONTROL) | (1 << 14));
 
+
+
+
+
 	/* Initialize the PIRQ data structures for consumption */
 	pirq_setup();
 #if CONFIG(GENERATE_SMBIOS_TABLES)
